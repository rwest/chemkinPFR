      SUBROUTINE DNSQSOLVE(NKK, PPRES, TTEMP, IINITRO, NNWDOT, NEQ, Z, TT1,
     1                   TT2, ITOL, RTOL, ATOL, ITASK, IOPT, RVODE,
     2                   LRW, IVODE, LIW, MF, RRWORK, IIWORK,
     3                   LOUT, ISTATE, FFIXEDMF)
C
C     Interface from the C++ driver program
C
      IMPLICIT DOUBLE PRECISION (A-H, O-Z), INTEGER (I-N)
      INTEGER J,N,IOPT,NPRINT,INFO,LWA,NWRITE
      DIMENSION RRWORK(LRW)
      DOUBLE PRECISION TOL,FNORM
      DOUBLE PRECISION X(N),FVEC(N),WA(LWA)
      DOUBLE PRECISION DENORM,D1MACH
      EXTERNAL FCN
      DATA NWRITE /6/
      COMMON /CKBLK/ RWORK(500000),IWORK(500000),PRES,TEMP,N,INITRO
      RWORK = RRWORK
      IWORK = IIWORK
      PRES = PPRES
      TEMP = TTEMP
      N = NKK
      INITRO = IINITRO

C       WA is a work array of length LWA.
C       LWA is a positive integer input variable not less than
C         (3*N**2+13*N))/2.
      LWA = (3*N**2 + 13*N)/2 + 1


C
      IOPT = 2


C
C     THE FOLLOWING STARTING VALUES PROVIDE A ROUGH SOLUTION.
C
      DO 10 J = 1, 9
         X(J) = -1.E0
   10    CONTINUE


      NPRINT = 0
C
C     SET TOL TO THE SQUARE ROOT OF THE MACHINE PRECISION.
C     UNLESS HIGH PRECISION SOLUTIONS ARE REQUIRED,
C     THIS IS THE RECOMMENDED SETTING.
C
      TOL = SQRT(D1MACH(4))
C
      CALL DNSQE(FCN,JAC,IOPT,N,X,FVEC,TOL,NPRINT,INFO,WA,LWA)
      FNORM = DENORM(N,FVEC)
      WRITE (NWRITE,1000) FNORM,INFO,(X(J),J=1,N)
      STOP
 1000 FORMAT (5X,' FINAL L2 NORM OF THE RESIDUALS',E15.7 //
     *        5X,' EXIT PARAMETER',16X,I10 //
     *        5X,' FINAL APPROXIMATE SOLUTION' // (5X,3E15.7))
      END
      
C
C       THE SUBROUTINE THAT WE'RE TRYING TO SOLVE:
C       
      SUBROUTINE FCN(N,X,FVEC,IFLAG)
      IMPLICIT DOUBLE PRECISION (A-H, O-Z), INTEGER (I-N)
      COMMON /CKBLK/ RWORK(500000),IWORK(500000),PRES,TEMP,N,INITRO
      INTEGER N,IFLAG
      DOUBLE PRECISION X(N),FVEC(N)
      
C     Returns the molar production rates of the species given pressure,
C     temperature(s) and mole fractions. Result returned in FVEC.
      CALL CKWXP (PRES, TEMP, X, IWORK, RWORK, FVEC) 

      RETURN
      END